version: '3.4'

services:



  tradeunioncommittee.mvc.web.gui:
    image: ${DOCKER_REGISTRY-}tradeunioncommittee_webapp_core_mvc
    container_name: tradeunioncommittee_webapp_core_mvc
    restart: always
    networks:
            tradeunioncommittee_network:
                ipv4_address: 172.28.1.1
    ports:
      - "9090:80"
      - "9091:443"
    build:
      context: .
      dockerfile: src/TradeUnionCommittee.Mvc.Web.GUI/Dockerfile



  tradeunioncommittee.web.api:
    image: ${DOCKER_REGISTRY-}tradeunioncommittee_webapp_core_api
    container_name: tradeunioncommittee_webapp_core_api
    restart: always
    networks:
            tradeunioncommittee_network:
                ipv4_address: 172.28.1.2
    ports:
      - "9092:80"
      - "9093:443"
    build:
      context: .
      dockerfile: src/TradeUnionCommittee.Web.Api/Dockerfile



  postgres:
    image: postgres:11.2
    container_name: postgres
    restart: always
    networks:
            tradeunioncommittee_network:
                ipv4_address: 172.28.1.3
    ports:
      - "9595:5432"
    environment:    
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres



  elasticsearch:
   image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
   container_name: elasticsearch
   restart: always
   networks:
            tradeunioncommittee_network:
                ipv4_address: 172.28.1.4
   ports:
    - "9200:9200"
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data



  kibana:
   image: docker.elastic.co/kibana/kibana:6.2.4
   container_name: kibana
   restart: always
   networks:
            tradeunioncommittee_network:
                ipv4_address: 172.28.1.5
   ports:
    - "5601:5601"
   depends_on:
    - elasticsearch



networks:
    tradeunioncommittee_network:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16



volumes:
  elasticsearch-data: